apiVersion: v1
kind: Namespace
metadata:
  name: rss-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rss-server-deployment
  namespace: rss-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rss-server
  template:
    metadata:
      labels:
        app: rss-server
    spec:
      containers:
      - name: rss-server
        image: msr2.konitzer.dev/wkonitzer/rss_server:latest
        env:
#        - name: LOGGING_LEVEL
#          value: "DEBUG"  
#        - name: FLASK_DEBUG
#          value: "True"        
        ports:
        - containerPort: 4000
        resources:
          requests:
            cpu: "10m"
            memory: "50Mi"
          limits:
            memory: "100Mi"
        livenessProbe:
          httpGet:
            path: /health 
            port: 4000
          initialDelaySeconds: 30 
          periodSeconds: 10 
        readinessProbe:
          httpGet:
            path: /health 
            port: 4000
          initialDelaySeconds: 5 
          periodSeconds: 5                   
      imagePullSecrets:
      - name: my-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: rss-server-service
  namespace: rss-server
spec:
  selector:
    app: rss-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rss-server-ingress
  namespace: rss-server
  annotations:
    kubernetes.io/ingress.class: caddy
    caddy.ingress.kubernetes.io/rewrite-to: /rss # Map / to /rss
spec:
  rules:
  - host: rss-server.konitzer.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rss-server-service
            port:
              number: 80
